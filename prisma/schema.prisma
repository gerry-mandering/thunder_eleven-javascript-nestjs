// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  userName String

  // Link
  teamAsLeader   Team[]
  matchAsCreater Match[] @relation("MatchCreater")

  @@map("users")
}

model Team {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  teamName    String
  region      String
  teamLevel   Level  @default(BEGINNER)
  mannerRate  Int    @default(36)
  mannerCount Int    @default(0)
  headCount   Int

  leaderId   Int
  teamLeader User     @relation(fields: [leaderId], references: [id])
  teamMember String[]

  // Link
  matchAsHomeTeam Match[] @relation("HomeTeam")
  matchAsAwayTeam Match[] @relation("AwayTeam")

  @@map("teams")
}

// 경기 룰 추가하기
model Match {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId      Int
  createdUser User @relation("MatchCreater", fields: [userId], references: [id])

  stadiumName      String
  matchLevel       Level
  headCountPerTeam Int

  homeTeamId                  Int
  homeTeam                    Team     @relation("HomeTeam", fields: [homeTeamId], references: [id])
  homeTeamLeaderId            Int
  homeTeamParticipatingMember String[]

  awayTeamId                  Int?
  awayTeam                    Team?    @relation("AwayTeam", fields: [awayTeamId], references: [id])
  awayTeamLeaderId            Int?
  awayTeamParticipatingMember String[]

  MatchResult MatchResult[]

  @@map("matches")
}

model MatchResult {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  matchId Int
  match   Match @relation(fields: [matchId], references: [id], onDelete: Cascade)

  homeTeamScore  Int?
  homeComment    String?
  homemannerRate Evaluation?

  awayTeamScore  Int?
  awayComment    String?
  awaymannerRate Evaluation?

  @@map("match results")
}

// 이전 버전
// model MatchResult {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//
//   stadiumName      String
//   matchLevel       Level
//   headCountPerTeam Int
//
//   homeTeamId     Int
//   homeTeam       Match      @relation("Home", fields: [homeTeamId], references: [id])
//   homeTeamScore  Int
//   homeComment    String
//   homemannerRate Evaluation
//
//   awayTeamId     Int
//   awayTeam       Match      @relation("Away", fields: [awayTeamId], references: [id])
//   awayTeamScore  Int
//   awayComment    String
//   awaymannerRate Evaluation
//
//   @@map("match results")
// }

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum Evaluation {
  BAD
  GOOD
}
